#Coding Guidelines
Write your queries in query.py
Query for each question is to be assigned to a variable in the above python file. Variables for each question are specified individually.
Schema for the tables that are to be used for following tasks

 Actor (  
	 id integer PRIMARY KEY,
	 fname varchar(250),  
	 lname varchar(250), 
	 gender varchar(10) 
 );

 Movie(  
	 id integer PRIMARY KEY, 
	 name varchar(250), 
	 year integer, 
	 rank integer
 );
	
 Director(  
	 id integer PRIMARY KEY, 
	 fname varchar(250), 
	 lname varchar(250)
 );

Cast(
        pid integer,
        mid integer,
        role varchar(200)
    );

MovieDirector(
        did integer,
        mid integer
    );

Cast stores the cast data i.e the actors who acted in each movie.

pid - actor id
mid - movie id
role - role of the actor with id equal to pid in movie with id equal mid
Similar to Cast, MovieDirector stores movie directors data i.e the directors for each movie

# Tasks
# Task 1
Calculate the number of movies(no_of_movies), each actor(actor_id) has acted.

Q1="Write your query here"
...

# Output Format
actor_id    no_of_movies
    1           10
    2           7
....
# Task 2
Calculate the number of movies released in each year, results should be in the ascending order of year.

...
Q2="Write your query here"
...
# Output Format
year    count
2001     10
2002     7
....
# Task 3
Calculate the average rank of movies(avg_rank) for each year, return year and avg_rank for years in which atleast 10 movies are released. Results should be in the descending order of year.

...
Q3="Write your query here"
...
# Output Format
year    avg_rank
2010        9
...
# Task 4
Calculate the maximum rank of movies(max_rank) for each year, return year and max_rank. Results should be in the ascending order of year.

...
Q4="Write your query here"
...

# Output Format
year    max_rank
2010        9
...
# Task 5
Calculate the number of movies whose name starts with "a" and have the same rank, return rank, and the number of movies for that rank.

...
Q5="Write your query here"
...
# Output Format
rank    no_of_movies
  9        111
............................
ANSWER:

Q1='''SELECT COUNT(id) from Movie WHERE (year = 2002 and rank > 2 and name LIKE 'Ha%');''' 
Q2='''SELECT MAX(rank) from Movie WHERE year IN (1983,1994) and name LIKE 'Autom%';''' 
Q3='''SELECT COUNT(id) from Actor WHERE gender='M' and (fname LIKE '%ei' or lname LIKE 'ei%') ;'''
Q4='''SELECT AVG(rank) from Movie WHERE year IN(1993,1995,2000) and (rank >= 4.2) ;'''
Q5='''SELECT sum(rank) from Movie WHERE year BETWEEN 1981 AND 1984 and (rank < 9) and name LIKE '%Hary%';'''
Q6='''SELECT year from Movie WHERE rank=5 LIMIT 1;'''
Q7='''SELECT COUNT(id) from Actor WHERE gender='F' or fname = lname;'''
Q8='''SELECT DISTINCT fname  from  Actor WHERE lname LIKE '%ei' ORDER BY fname ASC LIMIT 100;'''
Q9='''SELECT id,name AS movie_title,year from Movie WHERE year IN(2001,2002,2005,2006) LIMIT 25 OFFSET 10;'''
Q10='''SELECT DISTINCT lname from Director WHERE fname IN ("Yeud", "Wolf", "Vicky") ORDER BY lname ASC LIMIT 5;'''



